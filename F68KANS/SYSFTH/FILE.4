( Definition of FILE and FILE EXT wordsets )
( JPS, 01jun93 )

( changes: )
( JPS940815: CREATE-FILE: make mode fit for creation ) 
( JPS950106: WRITE-FILE: when u=0 it returned -1 as ior, fixed)
 
( Dependencies: )
( The SI CLIB shall be defined )


WORDLIST CONSTANT file-wordlist
file-wordlist vpush vswap
GET-CURRENT file-wordlist SET-CURRENT


DECIMAL


: '" 	( "ccc<">" -- c-addr u )	
	HERE DUP 
	POSTPONE S"	
	DUP >R ALLOT 
	SWAP R@ CMOVE
	R> 
	;

	'" a+"  '" w+"  '" r+"  '" a"  '" wb"  '" rb"  '" w"  '" r"


CREATE access-methods
	, ,  , ,  , ,  , ,  , ,  , ,  , ,  , ,

	
: access-method ( x1 -- c-addr u )
	2 CELLS *
	access-methods  + DUP CELL+
	@ SWAP @ 
	; 



0 CONSTANT R/O ( -- x )									( FILE )
1 CONSTANT W/O ( -- x )									( FILE )
5 CONSTANT R/W ( -- x )									( FILE )

: BIN ( x1 -- x2 )										( FILE )
	DUP 2 < IF 2 + THEN ;
	

: CLOSE-FILE ( fileid -- ior )							( FILE )
	_fclose ;
	

: CREATE-FILE ( c-addr u x1 -- x2 ior )					( FILE )
	DUP R/W = IF 1+ THEN
( JPS940815 )	
( this is a ugly hack, but my CLIB forces to use fopen for both, )
( opening and creating. So I have to modify the mode             )
	access-method _fopen DUP 0= 
	;


: DELETE-FILE ( c-addr u -- ior )						( FILE )
	_unlink
	;


: FILE-POSITION ( fileid -- ud ior )					( FILE )
	_ftell DUP -1 = 
	;
	
	
: FILE-SIZE ( fileid -- ud ior )						( FILE )
	DUP _ftell	OVER
	_fileno	0 ( offset )  _seek_end  _lseek   >R
	( fileid _ftell ) _seek_set  _fseek  DROP 
	R>  DUP -1 = 	0 SWAP ( >double )
	;


: -rot ( n1 n2 n3 -- n3 n1 n2 )
	ROT ROT 
	;


VARIABLE #line

: INCLUDE-FILE ( i*x fileid -- j*x )					( FILE )
	\ first, save input specification on returnstack
	SAVE-INPUT 	DUP 
	BEGIN  DUP  WHILE  1- ROT >R  REPEAT DROP  >R

	0 #line !		\ reset current number of line 

	rp@ 256 - rp! 	\ allocate linebuffer on returnstack

	rp@ >file-ib !
	DUP >source-id !	0 BLK !

	>R
	BEGIN	
		>file-ib @  256  R@   _fgets OVER
			\ _fgets returns NULL at EOF  
	WHILE

		1 #line +!

		1- #file-ib ! 	DROP	0 >IN !	
		['] interpret CATCH	?DUP	\ interpret it
		IF 		\ ON ERROR clear up the whole stuff

			CR
			." Error in line " #line @ . ." :  "   

			R> DROP
			rp@ 256 + rp!
	
			R> DUP  BEGIN  DUP  WHILE  1- R> -rot  REPEAT
		 	DROP RESTORE-INPUT
		  	THROW  
		THEN
	REPEAT

	\ and clear up the whole stuff
	R> 2DROP DROP
	rp@ 256 + rp!
	
	R> DUP  BEGIN  DUP  WHILE  1- R> -rot  REPEAT
 	DROP RESTORE-INPUT
 	;



: OPEN-FILE ( c-addr u x1 -- x2 ior )					( FILE )
	access-method _fopen DUP 0= 
	;



: INCLUDED ( i*x c-addr u - j*x )						( FILE )
	2DUP abort"cnt !   abort"msg !
	R/O OPEN-FILE 0=
	IF  
		DUP >R  ['] INCLUDE-FILE CATCH
		R>	CLOSE-FILE DROP
		THROW
	ELSE
		DROP -38 THROW 		\ TRUE ABORT" <cannot open file>"
	THEN	
	;



: READ-FILE ( c-addr u1 fileid -- u2 ior )				( FILE )	
	1 -rot _fread DUP 0< ;
	

: READ-LINE ( c-addr u1 fileid -- u2 flag ior )			( FILE )
	SWAP 1+ SWAP
	_fgets OVER 
	IF
		2DUP 1- + C@ 10 = IF 1- THEN		( strip EOL if present ) 
		NIP 	TRUE 0
	ELSE
		2DROP 	0 FALSE 0		
	THEN
	;
	

: REPOSITION-FILE ( ud fileid -- ior )					( FILE )
	>R DROP R> SWAP _seek_set  _fseek 
	;

: WRITE-FILE ( c-addr u fileid -- ior )					( FILE )
	1 SWAP  _fwrite  1 - ; 



:NONAME ( : add-0-to-file ( n fileid -- ior )
	DUP >R FILE-SIZE DROP 
	R@  REPOSITION-FILE  DROP  ( >eof )
	PAD 512 0 FILL
	512 /MOD  R> SWAP  0
	DO ( mod fileid )
		PAD 512 ROT DUP >R  WRITE-FILE DROP R>
	LOOP	( mod fileid )
	PAD -rot  WRITE-FILE
	; 


: RESIZE-FILE ( ud fileid -- ior )						( FILE )
	NIP					( no double number needed )
	DUP >R FILE-SIZE 2DROP 2DUP > 		( new size larger than existing? )
	IF	
		- ( size of expansion ) R> [ SWAP ] LITERAL EXECUTE
                                ( !^^^^^^^^! )  
	ELSE
		R> DROP -1 
	THEN 
	;
    

: WRITE-FILE ( c-addr u fileid -- ior )					( FILE )
	OVER 0= IF 2DROP 0 EXIT THEN 
	1 SWAP _fwrite 1 - ;


:NONAME 13 PAD C! 10 PAD 1+ C!  PAD 2 ;

: WRITE-LINE ( c-addr u fileid -- ior )					( FILE )
	DUP >R _fputs DROP 
	LITERAL EXECUTE R> _fputs ;


( 																)
( FILE EXTENSION												)
(																)

: FILE-STATUS ( c-addr u -- x ior )						( FILE EXT )
	R/O OPEN-FILE DUP 0=
	IF
		DROP DUP FILE-SIZE 2DROP
		0
	THEN ;


: FLUSH-FILE ( fileid -- ior )							( FILE EXT )
	_fflush ;


: RENAME-FILE ( c-addr1 u1 c-addr2 u2 -- ior )			( FILE EXT )
	_rename ;

S" FILE" 				TRUE 	1 SET-ENVIRONMENT
S" FILE-EXT" 			TRUE 	1 SET-ENVIRONMENT


\
\
\ words in common use
\
\
: INCLUDE ( <name> -- )
	BL WORD  COUNT INCLUDED ;


SET-CURRENT ( restore )
